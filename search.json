[{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://pablovgd.github.io/TARDIS/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://pablovgd.github.io/TARDIS/articles/case_study.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Case study: targeted metabolite detection using TARDIS in cardiovascular disease","text":"TARDIS offers easy straightforward way automatically calculate area peak, max intensity various quality metrics targeted chemical compounds LC-MS data. makes use established retention time correction algorithm xcms package loads MS data Spectra objects ’s easily integrated tools Rformassspectrometry initiative. See README installation instructions. vignette, case study publicly available biological data described. presume discovered list important metabolite biomarkers cardiovascular disease (CVD), like validate dataset.","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/case_study.html","id":"dataset","dir":"Articles","previous_headings":"","what":"Dataset","title":"Case study: targeted metabolite detection using TARDIS in cardiovascular disease","text":"use MetaboLights dataset MTBLS8735, example untargeted metabolomics dataset tailored quantify small polar metabolome human plasma samples aimed identify differences individuals suffering cardiovascular disease (CVD) healthy controls (CTR). subset analyzed includes data three CVD patients, three CTR individuals, four quality control (QC) samples. QC samples, representing pooled serum sample large cohort, measured repeatedly throughout experiment monitor signal stability. samples analyzed using ultra-high-performance liquid chromatography (UHPLC) (Agilent 1290; Agilent Technologies, Santa Clara, CA, USA) coupled Q-TOF mass spectrometer (TripleTOF 5600+; AB Sciex, Foster City, CA, USA). chromatographic separation based hydrophilic interaction liquid chromatography (HILIC) performed using Acquity BEH amide, 100 x 2.1 mm column (Waters Corporation, Milford, MA, USA). list internal standards: Alanine 13C315N (0.9 μg/mL), arginine 13C615N4 (1.8 μg/mL), aspartic acid 13C415N (1.3 μg/mL), cystine 13C615N2 (1.2 μg/mL), glutamic acid 13C515N (1.5 μg/mL), glycine 13C215N (0.8 μg/mL), histidine 13C615N3 (1.6 μg/mL), isoleucine 13C615N (1.3 μg/mL), leucine 13C615N (1.3 μg/mL), lysine 13C615N2 (1.5 μg/mL), methionine 13C515N (1.5 μg/mL), phenylalanine 13C915N (1.7 μg/mL), proline 13C515N (1.2 μg/mL), serine 13C315N (1.1 μg/mL), threonine 13C415N (1.2 μg/ mL), tyrosine 13C915N (1.8 μg/mL) valine 13C515N (1.2 μg/mL). details, refer MetaboLights repository.","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/case_study.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"Case study: targeted metabolite detection using TARDIS in cardiovascular disease","text":"first step creating data.frame describes metabolites interest. case, internal standards 6 biomarkers interest. Following columns least need present compound: compound ID, unique identifier compound Name Theoretical measured m/z Expected RT (minutes) column indicates polarity formed ion compound Extra columns can included file, ignored TARDIS unless otherwise indicated. input file (either .xlsx .csv) can converted correct data.frame using createTargetList() function. Input parameters needed : path file, patterns positive negative ionization, polarity interest, columnn contains ionization mode columns interest. target data.frame created using createTargetList(). info use function, check help page: ?createTargetList biomarkers defined : extract dataset MetaboLigths database load MsExperiment object. information load data MetaboLights database, refer MsIO vignette. Simplifying sampleData: IMPORTANT! sample type column (indicating QCs) named type. column indicating file named spectraOrigin.","code":"library(readxl) input <- read.csv2(\"vignette_data/bio_targets.csv\",sep = \",\") kableExtra::kable(head(input)) library(TARDIS) targets <- createTargetList(\"vignette_data/bio_targets.csv\",                             pos_pattern = \"+\",                             neg_pattern = \"-\",                             polarity = \"positive\",                             ion_column = \"POS\",                             columns_of_interest = c(\"ID\", \"name\", \"mz\", \"rt\")) kableExtra::kable(targets[21:26,]) library(MsExperiment) library(MsIO) library(MsBackendMetaboLights) param <- MetaboLightsParam(mtblsId = \"MTBLS8735\",                            assayName = paste0(\"a_MTBLS8735_LC-MS_positive_\",                                               \"hilic_metabolite_profiling.txt\"),                            filePattern = \".mzML\") lcms1 <- readMsObject(MsExperiment(),                       param,                       keepOntology = FALSE,                       keepProtocol = FALSE,                       simplify = TRUE) lcms1 #> Object of class MsExperiment  #>  Spectra: MS1 (17210)  #>  Experiment data: 10 sample(s) #>  Sample data links: #>   - spectra: 10 sample(s) to 17210 element(s). colnames(sampleData(lcms1)) <- c(\"sample_name\", \"spectraOrigin\",                                 \"metabolite_asssignment_file\",                                 \"source_name\",                                 \"organism\",                                 \"blood_sample_type\",                                 \"type\", \"age\", \"unit\", \"phenotype\")  # Add \"QC\" to the phenotype of the QC samples sampleData(lcms1)$phenotype[sampleData(lcms1)$sample_name == \"POOL\"] <- \"QC\" sampleData(lcms1)$sample_name[sampleData(lcms1)$sample_name == \"POOL\" ] <- c(\"POOL1\", \"POOL2\", \"POOL3\", \"POOL4\") sampleData(lcms1)$type[sampleData(lcms1)$type == \"pool\"] <- \"QC\"  #  Add injection index column sampleData(lcms1)$injection_index <- seq_len(nrow(sampleData(lcms1))) sampleData(lcms1)[, c(\"spectraOrigin\",                      \"phenotype\", \"sample_name\", \"type\",                      \"injection_index\")] |>     kableExtra::kable(format = \"pipe\")"},{"path":"https://pablovgd.github.io/TARDIS/articles/case_study.html","id":"screening-mode","dir":"Articles","previous_headings":"","what":"Screening mode","title":"Case study: targeted metabolite detection using TARDIS in cardiovascular disease","text":"First, perform screening step check targets visible within m/z RT windows. can run screening mode using argument screening_mode = TRUE tardisPeaks function. details inputs function, please read help page ?tardisPeaks limit running time vignette, limit internal standard targets five, enough good RT alignment, given retention times span throughout analysis. info choose right “housekeeping compounds” RT alignment, refer reader xcms documentation. L-Cystine (13C6, 99%; 15N2, 99%) L-Methionine (13C5, 99%; 15N, 99%) L-Glutamic acid (13C5, 99%; 15N, 99%) L-Phenylalanine (13C9, 99%; 15N, 99%) L-Serine (13C3, 99%; 15N, 99%) resulting EICs saved output folder can inspected.  Based EICs can see detection, RT alignment integration target peaks QC runs successful. However, signal component 26, non-annotated biomarker, remarkably lower quality others. One pooled QC shows high signal absent QC runs.","code":"subset <- targets[c(17,14,7,8,15,21:26),] results <- tardisPeaks( lcmsData = lcms1,                          dbData = subset,                         mass_range = NULL,                         polarity = \"positive\",                         output_directory = \"vignette_data/output/case/screening/\",                         batch_positions = list(c(1,10)),                         QC_pattern = \"QC\",                         int_std_id = as.character(1:20),                         screening_mode = TRUE) #> Performing retention time correction using 5 peak groups."},{"path":"https://pablovgd.github.io/TARDIS/articles/case_study.html","id":"peak-detection","dir":"Articles","previous_headings":"","what":"Peak detection","title":"Case study: targeted metabolite detection using TARDIS in cardiovascular disease","text":"Now can perform peak detection runs setting screening_mode =  FALSE.","code":"results <- tardisPeaks( lcmsData = lcms1,                          dbData = subset,                         mass_range = NULL,                         polarity = \"positive\",                         output_directory = \"vignette_data/output/case/\",                         batch_positions = list(c(1,10)),                         QC_pattern = \"QC\",                         int_std_id = as.character(1:20),                         screening_mode = FALSE) #> Performing retention time correction using 5 peak groups. #> Aligning sample number 2 against subset ... OK #> Aligning sample number 3 against subset ... OK #> Aligning sample number 5 against subset ... OK #> Aligning sample number 6 against subset ... OK #> Aligning sample number 8 against subset ... OK #> Aligning sample number 9 against subset ... OK"},{"path":"https://pablovgd.github.io/TARDIS/articles/case_study.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Case study: targeted metabolite detection using TARDIS in cardiovascular disease","text":"results object list contains data.frame AUC target run tibble contains feature table average metrics target QC runs. results include tables metrics (Max. Int., SNR, peak_cor points peak) saved output folder .csv format.","code":"AUC <- results[[1]] kableExtra::kable(head(AUC)) feat_table <- results[[2]] kableExtra::kable(head(feat_table)) maxint <- read.csv(\"vignette_data/output/case/int_table.csv\",check.names = FALSE)[,-1] SNR <- read.csv(\"vignette_data/output/case/snr_table.csv\",check.names = FALSE)[,-1] peak_cor <- read.csv(\"vignette_data/output/case/peakcor_table.csv\",check.names = FALSE)[,-1] pop <- read.csv(\"vignette_data/output/case/pop_table.csv\",check.names = FALSE)[,-1] kableExtra::kable(head(pop))"},{"path":"https://pablovgd.github.io/TARDIS/articles/case_study.html","id":"exploratory-data-analysis","dir":"Articles","previous_headings":"","what":"Exploratory data analysis","title":"Case study: targeted metabolite detection using TARDIS in cardiovascular disease","text":"next section vignette describes example exploratory data analysis using results TARDIS preprocessing.","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/case_study.html","id":"pca","dir":"Articles","previous_headings":"Exploratory data analysis","what":"PCA","title":"Case study: targeted metabolite detection using TARDIS in cardiovascular disease","text":"First, use perform principal component analysis (PCA) using AUC’s biomarkers:  Results expected: QC samples cluster together, indicating little technical variance analysis. However, one QC sample clearly differs others. due component 26, , shown earlier, showed large peak one QC runs, others. Samples CVD phenotype cluster together, CTR samples indicating biomarkers vary less within CVD phenotype compared healthy controls. Disregarding component nr 26, PCA looks like:","code":"# Load required packages library(dplyr) library(tidyr) library(ggplot2) # Limit input data to biomarkers and not ISTD targets data <- AUC[4:9,] sampledata <- data.frame(sampleData(lcms1)) # Remove \"FILES/\" prefix sampledata$spectraOrigin <- gsub(\"FILES/\", \"\", sampledata$spectraOrigin) # Ensure row names correspond to Feature ID rownames(data) <- data[, 1] data <- data[, -1]  # Remove the feature ID column for PCA # Transpose the data so that samples are rows and features are columns data_t <- as.data.frame(t(data)) # Impute NA values na_unidis <- function(z) {     na <- is.na(z)     if (any(na)) {         min = min(z, na.rm = TRUE)         z[na] <- runif(sum(na), min = min/2, max = min)     }     z } tmp <- apply(data_t, MARGIN = 1, na_unidis) data_t <- t(tmp) # Perform PCA pca_result <- prcomp(data_t, scale. = TRUE,center = TRUE) # Extract PCA scores pca_df <- as.data.frame(pca_result$x) pca_df$Sample <- rownames(pca_df) # Merge with sample metadata to get phenotype information pca_df <- left_join(pca_df, sampledata, by = c(\"Sample\" = \"spectraOrigin\")) # Plot PCA ggplot(pca_df, aes(x = PC1, y = PC2, color = phenotype)) +   geom_point(size = 3) +   theme_minimal() +   labs(title = \"PCA\",        x = \"Principal Component 1\",        y = \"Principal Component 2\") +   scale_color_manual(values = c(\"red\", \"blue\", \"green\")) # Customize colors if needed # Limit input data to biomarkers and not ISTD targets data <- AUC[4:8,] sampledata <- data.frame(sampleData(lcms1)) # Remove \"FILES/\" prefix sampledata$spectraOrigin <- gsub(\"FILES/\", \"\", sampledata$spectraOrigin) # Ensure row names correspond to Feature ID rownames(data) <- data[, 1] data <- data[, -1]  # Remove the feature ID column for PCA # Transpose the data so that samples are rows and features are columns data_t <- as.data.frame(t(data)) # Impute NA values na_unidis <- function(z) {     na <- is.na(z)     if (any(na)) {         min = min(z, na.rm = TRUE)         z[na] <- runif(sum(na), min = min/2, max = min)     }     z } tmp <- apply(data_t, MARGIN = 1, na_unidis) data_t <- t(tmp) # Perform PCA pca_result <- prcomp(data_t, scale. = TRUE,center = TRUE) # Extract PCA scores pca_df <- as.data.frame(pca_result$x) pca_df$Sample <- rownames(pca_df) # Merge with sample metadata to get phenotype information pca_df <- left_join(pca_df, sampledata, by = c(\"Sample\" = \"spectraOrigin\")) # Plot PCA ggplot(pca_df, aes(x = PC1, y = PC2, color = phenotype)) +   geom_point(size = 3) +   theme_minimal() +   labs(title = \"PCA\",        x = \"Principal Component 1\",        y = \"Principal Component 2\") +   scale_color_manual(values = c(\"blue\", \"red\", \"green\")) # Customize colors if needed"},{"path":"https://pablovgd.github.io/TARDIS/articles/case_study.html","id":"differential-abundance-analysis","dir":"Articles","previous_headings":"Exploratory data analysis","what":"Differential abundance analysis","title":"Case study: targeted metabolite detection using TARDIS in cardiovascular disease","text":"section perform differential abundance analysis investigate differences abudance biomarkers observe two phenotype groups. First remove ISTD targets data impute missing values. Next visualize log2 transformed abudances feature group using boxplots.  test differences biomarker, use wilcox.test function. boxplots , known biomarkers underrepresented CVD phenotype, hence, use alternative = \"less\" option wilcox.test function. Data log2 transformed.","code":"# Limit input data to biomarkers and not ISTD targets data <- AUC[4:8,] sampledata <- data.frame(sampleData(lcms1)) sampledata$spectraOrigin <- gsub(\"FILES/\", \"\", sampledata$spectraOrigin) # Ensure row names correspond to Feature ID rownames(data) <- data[, 1] data <- data[, -1]  # Remove the feature ID column for PCA data_t <- as.data.frame(t(data)) na_unidis <- function(z) {     na <- is.na(z)     if (any(na)) {         min = min(z, na.rm = TRUE)         z[na] <- runif(sum(na), min = min/2, max = min)     }     z } #' Row-wise impute missing values and add the data as a new assay tmp <- apply(data_t, MARGIN = 1, na_unidis) data_t <- as.data.frame(t(tmp)) # Merge with sample metadata data_t$Sample <- rownames(data_t) data_t <- left_join(data_t, sampledata, by = c(\"Sample\" = \"spectraOrigin\")) data_t <- data_t[-which(data_t$phenotype == \"QC\"),] boxdata <- data_t[,c(1:5,15)] boxdata <- pivot_longer(boxdata,cols = !phenotype,names_to = \"feature\",values_to = \"abundance\") ggplot(boxdata, aes(x=feature, y=log2(abundance), fill=phenotype)) +      geom_boxplot() +   scale_fill_manual(values = c(\"blue\",\"red\")) pres <- data.frame(Feature = colnames(data_t)[1:5], p_value = NA) for (i in 1:5) {   feature_values <- data_t[, i]   group1 <- log2(feature_values[data_t$phenotype == \"CVD\"])   group2 <- log2(feature_values[data_t$phenotype == \"CTR\"])   pres$p_value[i] <- wilcox.test(group1, group2,alternative = \"less\")$p.value   } pres$adj_p_value <- p.adjust(pres$p_value, method = \"fdr\") knitr::kable(pres)"},{"path":"https://pablovgd.github.io/TARDIS/articles/case_study.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Case study: targeted metabolite detection using TARDIS in cardiovascular disease","text":"Based results preprocessed using TARDIS, can conclude earlier discovered metabolites indeed valid biomarkers CVD phenotype significantly underrepresented CVD samples.","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"T..R.D..S. R package developed Pablo Vangeenderhuysen LIMET, Ghent University. T..R.D..S. offers easy straightforward way automatically calculate area peak, max intensity various quality metrics targeted chemical compounds LC-MS data. makes use established retention time correction algorithm xcms package loads MS data Spectra objects ’s easily integrated tools Rformassspectrometry initiative. See README installation instructions. tutorial explains basic functionality T..R.D..S. use Shiny GUI. ’s advised read tutorial end using T..R.D..S. understand tool works kind input needed.","code":""},{"path":[]},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"the-general-workflow","dir":"Articles","previous_headings":"Targeted data processing with T.A.R.D.I.S.","what":"The general workflow","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"T..R.D..S. developed open-source alternative targeted peak integration using simple interpretable algorithms. ’s general workflow follows: Create target list Screening step Retention time (RT) alignment samples Peak detection QCs adjustment expected retention time Peak detection samples Calculate quality metrics peaks summarize results","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"creating-a-target-list","dir":"Articles","previous_headings":"Targeted data processing with T.A.R.D.I.S. > The general workflow","what":"Creating a target list","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"first step creating data.frame describes chemical compounds. Following columns least need present compound: compound ID, unique identifier compound Name Theoretical measured m/z Expected RT (minutes) column indicates polarity formed ion compound Extra columns can included file, ignored T..R.D..S. unless otherwise indicated. input file (either .xlsx .csv) can converted correct data.frame using createTargetList() function (needed using GUI). Input parameters needed : path file, patterns positive negative ionization, polarity interest, columnn contains ionization mode columns interest. example: Input file looks like (first 6 rows): target data.frame created:","code":"targets <- createTargetList(\"vignette_data/targets.xlsx\",                             pos_pattern = \"+\",                             neg_pattern = \"-\",                             polarity = \"positive\",                             ion_column = \"ion\",                             columns_of_interest = c(\"id\", \"name\", \"mz\", \"rt\"))  kableExtra::kable(head(targets))"},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"screening-and-adjusting-expected-retention-time","dir":"Articles","previous_headings":"Targeted data processing with T.A.R.D.I.S. > The general workflow","what":"Screening and adjusting expected retention time","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"step, 5 QC runs processed check provided expected retention time precise enough consistent integration. 5 QCs automatically picked represent beginning, middle end analysis. analysis suffering retention time drift /compound eluting expected RT, become apparent quick screening. necessary, changes can made input targets table one can proceed processing samples results. perform screening step, GUI “screening mode” checked using command line, argument screening_mode TRUE. example compound retention time adjusted shown Figure 1. retention shift severe can mediated retention time correction step (see next section), can happen peak QC run beginning analysis barely window peak QC run end analysis. resolve , performing processing different “batches” advised, see later details. figure knowledge compound, can see compound present, eluting later expected. Adjusting expected RT targets file makes sure compound visible window integration happen correctly. See Figure 2.","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"retention-time-alignment","dir":"Articles","previous_headings":"Targeted data processing with T.A.R.D.I.S. > The general workflow","what":"Retention time alignment","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"order deal RT shift longer analyses, RT correction/sample alignment done based found peaks internal standard compounds quality control (QC) samples. alignment performed using adjustRtime() function xcms using PeakGroupsParam parameter: performs retention time correction based alignment features defined /samples (corresponding house keeping compounds marker compounds) (Smith 2006). case, house keeping compounds manually defined internal standard compounds always present good quality peaks. done peakGroupsMatrix parameter. details: https://github.com/sneumann/xcms/issues/715 Plots show results two components 5 QC runs without RT correction (left) RT correction (right).","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"peak-detection-in-qcs-and-adjusting-expected-rt","dir":"Articles","previous_headings":"Targeted data processing with T.A.R.D.I.S. > The general workflow","what":"Peak detection in QC’s and adjusting expected RT","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"Based expected RT, target compounds integrated quality control samples. said, severe cases RT shift, RT correction sometimes isn’t able align samples throughout whole analysis. behavior visible running screening mode, QCs beginning end analysis aren’t properly aligned, might advised run analysis batches. deal different expected RT per batch, target compounds first integrated QCs batch, expected RT adjusted RT compounds retrieved (almost retrieved) QCs. next step, runs (QCs samples) batch processed adjusted RT. example: Figures , compound clearly eluting different time QC runs beginning analysis (left), compared QC runs end analysis (right). order avoid manually provide expected RT every batch, T..R.D..S. detect peak apex now closer RT 440 seconds (7.3 minutes) thus finally processing batch expected RT compound approximately 440 seconds instead 446 seconds.","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"peak-detection-in-samples","dir":"Articles","previous_headings":"Targeted data processing with T.A.R.D.I.S. > The general workflow","what":"Peak detection in samples","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"Finally, setting new expected RT, peaks integrated samples (QCs). user can choose get plots components samples QCs (plotted groups 5 samples, see example ).","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"quality-metrics-and-output-files","dir":"Articles","previous_headings":"Targeted data processing with T.A.R.D.I.S. > The general workflow","what":"Quality metrics and output files","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"following files created chosen output folder: Folders desired plots (Diagnostic plots, QCs, samples) feature overview table average metrics compounds QC runs Area curve (auc_table) Max peak intensity (int_table) Correlation score (peakcor_table) Points peak (pop_table) Signal noise (snr_table) signal noise correlation score adapted Kumler et al. (2023). publication, two metrics showed best predictors actual peak quality, thus can useful screen compounds consistently low quality /need defined “Found”. Currently filtering results using GUI available based max intensity.","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"starting-the-gui","dir":"Articles","previous_headings":"Targeted data processing with T.A.R.D.I.S.","what":"Starting the GUI","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"First, installation, load package: launch GUI run: Shiny GUI open RStudio window browser:","code":"library(TARDIS) runTardis()"},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"creating-a-target-list-1","dir":"Articles","previous_headings":"Targeted data processing with T.A.R.D.I.S. > Starting the GUI","what":"Creating a target list","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"tab “Create target list”, one can adjust following parameters: Input table target compounds, .csv .xlsx format pattern unique compounds forming positive ions, found ion column pattern unique compounds forming negative ions, found ion column name ion column retrieve pattern columns interest one wants retain output (id,name,mz rt mandatory) Pressing “Create Target List” filling parameter fields create target list pass next part.","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"targeted-peak-detection","dir":"Articles","previous_headings":"Targeted data processing with T.A.R.D.I.S. > Starting the GUI","what":"Targeted peak detection","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"tab “Targeted peak detection”, one can adjust following parameters: Data folder path containing .mzML files Folder path store output PPM: allowed m/z error ppm Custom mass range: case analysis multiple mass-ranges different time windows: enter desired mass window, see quick start vignette. RT deviation: search window visible peak picking algorithm around expected RT (e.g. 18 means +- 9 seconds around expected RT) Internal standard IDs: IDs internal standard compounds used RT alignment Batch positions: pairs, beginning end position files batch. E.g. 1,20,21,40 means file 1 including 20 batch 1, file 21 including 40 batch 2 Sample pattern: .mzML files sample runs unique identifier, indicate , nothing entered, .mzML files QC identifier marked sample QC pattern: entern pattern unique QC .mzML files Generate diagnostic plots: create diagnostic plots 5 QCs automatically selected beginning, middle end analysis Generate sample plots: create plots compounds sample runs Generate QC plots: create plots compounds QC runs Screening mode: fast processing mode processes 5 QC runs beginning, middle end analysis RT alignment: wether perform RT alignment. Smoothing: apply smoothing (attention! also means quality metrics computed smoothed peaks raw data). first honest look data quality, advise leave . Minimum peak intensity: minimum maximum intensity threshold peaks. Peaks maximum intensity less threshold excluded results (NA results table).   processing, wait patiently:  processing finished, message appear:","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/gui_tutorial.html","id":"issues-and-feature-requests","dir":"Articles","previous_headings":"","what":"Issues and feature requests","title":"Targeted peak integration of LC-MS data using T.A.R.D.I.S.","text":"T..R.D..S. receive periodical updates including improvements /new features based need users. encounter error, problem, feel free create issue Github. Got idea improve T..R.D..S.? Feature requests also welcome. https://github.com/pablovgd/T..R.D..S./issues","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/quick_start.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quick start for targeted peak integration of LC-MS data using TARDIS","text":"TARDIS offers easy straightforward way automatically calculate area peak, max intensity various quality metrics targeted chemical compounds LC-MS data. makes use established retention time correction algorithm xcms package loads MS data Spectra objects ’s easily integrated tools Rformassspectrometry initiative. See README installation instructions. quick start guide briefly demonstrate main functionalities TARDIS using command line interface. details GUI refer gui_tutorial vignette. information refer publication : https://pubs.acs.org/doi/10.1021/acs.analchem.5c00567.","code":""},{"path":"https://pablovgd.github.io/TARDIS/articles/quick_start.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"Quick start for targeted peak integration of LC-MS data using TARDIS","text":"first step creating data.frame describes chemical compounds. Following columns least need present compound: compound ID, unique identifier compound Name Theoretical measured m/z Expected RT (minutes) column indicates polarity formed ion compound Extra columns can included file, ignored TARDIS unless otherwise indicated. input file (either .xlsx .csv) can converted correct data.frame using createTargetList() function. Input parameters needed : path file, patterns positive negative ionization, polarity interest, columnn contains ionization mode columns interest. target data.frame created using createTargetList(). info use function, check help page: ?createTargetList files targets need detected : files ordered folder injection index, case, total 14 runs:two QC injections, followed four sample injections, two QC injections, four sample injections two QC injections. Alternatively, instead using file paths input TARDIS, user can also use MsExperiment object. necessary include least sample type sampleData distinguish QC sample runs. IMPORTANT! sampleData column named type.","code":"library(TARDIS) #> Warning: replacing previous import 'S4Arrays::makeNindexFromArrayViewport' by #> 'DelayedArray::makeNindexFromArrayViewport' when loading 'SummarizedExperiment' targets <- createTargetList(\"vignette_data/targets.xlsx\",                             pos_pattern = \"+\",                             neg_pattern = \"-\",                             polarity = \"positive\",                             ion_column = \"ion\",                             columns_of_interest = c(\"id\", \"name\", \"mz\", \"rt\"))  kableExtra::kable(head(targets)) list.files(path = \"vignette_data/mzML/\") #>  [1] \"230523s016_QC1_1.mzML\" \"230523s017_QC2_1.mzML\" \"230523s018_A081.mzML\"  #>  [4] \"230523s020_A254.mzML\"  \"230523s021_A158.mzML\"  \"230523s022_A521.mzML\"  #>  [7] \"230523s028_QC1_2.mzML\" \"230523s029_QC2_2.mzML\" \"230523s030_A043.mzML\"  #> [10] \"230523s031_A551.mzML\"  \"230523s032_A566.mzML\"  \"230523s033_A513.mzML\"  #> [13] \"230523s040_QC1_3.mzML\" \"230523s041_QC2_3.mzML\" library(MsExperiment) files <- list.files(path = \"vignette_data/mzML/\",full.names = TRUE) ms_data <- readMsExperiment(files,                             backend = Spectra::MsBackendMzR()) ms_data #> Object of class MsExperiment  #>  Spectra: MS1 (15625)  #>  Experiment data: 14 sample(s) #>  Sample data links: #>   - spectra: 14 sample(s) to 15625 element(s). sampleData(ms_data)$type <- c(\"QC\",               \"QC\",               \"sample\",               \"sample\",               \"sample\",               \"sample\",               \"QC\",               \"QC\",               \"sample\",               \"sample\",               \"sample\",               \"sample\",               \"QC\",               \"QC\")"},{"path":"https://pablovgd.github.io/TARDIS/articles/quick_start.html","id":"data-with-multiple-scan-windows","dir":"Articles","previous_headings":"","what":"Data with multiple scan windows","title":"Quick start for targeted peak integration of LC-MS data using TARDIS","text":"IMPORTANT! data contains multiple (overlapping) m/z scan windows, nescessary analyze seperatly “mass_range” argument. , notice peaks sawtooth profile, filtering empty spectra within TARDIS.","code":"knitr::include_graphics(\"vignette_data/plots/sawtooth.png\")"},{"path":"https://pablovgd.github.io/TARDIS/articles/quick_start.html","id":"screening-mode","dir":"Articles","previous_headings":"","what":"Screening mode","title":"Quick start for targeted peak integration of LC-MS data using TARDIS","text":"First, perform screening step check targets visible within m/z RT windows. limited selection 10 targets: 5 internal standards 5 endogenous metabolites. can run screening mode using argument screening_mode = TRUE tardis_peaks function. details inputs function, please read help page ?tardisPeaks , mentioned, MsExperiment object can used input instead. resulting EICs saved output folder can inspected:  Based EICs can see detection integration successful, however,targets 1577 1583 eluting towards edge retention time windows, ’ll adjust expected retention times ones see peaks eluting.","code":"targets = targets[targets$ID %in% c(\"1576\",\"1577\",\"1578\",\"1583\",\"331\",                             \"7\",\"9\",\"131\",\"179\",\"183\"),] results <- tardisPeaks(file_path = \"vignette_data/mzML/\",                         dbData = targets,                         mass_range = NULL,                         polarity = \"positive\",                         output_directory = \"vignette_data/output/screening/\",                         batch_positions = list(c(1,14)),                         QC_pattern = \"QC\",                         int_std_id = c(\"1576\",\"1577\",\"1578\",\"1583\",\"331\"),                         screening_mode = TRUE) #> Performing retention time correction using 5 peak groups. results <- tardisPeaks( lcmsData = ms_data,                          dbData = targets,                         mass_range = NULL,                         polarity = \"positive\",                         output_directory = \"vignette_data/output/screening/\",                         batch_positions = list(c(1,14)),                         QC_pattern = \"QC\",                         int_std_id = c(\"1576\",\"1577\",\"1578\",\"1583\",\"331\"),                         screening_mode = TRUE) #> Performing retention time correction using 5 peak groups. #> Warning in .adjustRtime_peakGroupsMatrix(rt_raw, peakGroupsMatrix(param), : #> Span too small for 'loess' and the available number of peak groups, resetting #> to 0.8 knitr::include_graphics(c(\"vignette_data/output/screening/Diagnostic_QCs_Batch_1/Component_7.png\",                          \"vignette_data/output/screening/Diagnostic_QCs_Batch_1/Component_9.png\",                          \"vignette_data/output/screening/Diagnostic_QCs_Batch_1/Component_131.png\",                          \"vignette_data/output/screening/Diagnostic_QCs_Batch_1/Component_179.png\",                          \"vignette_data/output/screening/Diagnostic_QCs_Batch_1/Component_183.png\",                          \"vignette_data/output/screening/Diagnostic_QCs_Batch_1/Component_331.png\",                          \"vignette_data/output/screening/Diagnostic_QCs_Batch_1/Component_1576.png\",                          \"vignette_data/output/screening/Diagnostic_QCs_Batch_1/Component_1577.png\",                          \"vignette_data/output/screening/Diagnostic_QCs_Batch_1/Component_1578.png\",                          \"vignette_data/output/screening/Diagnostic_QCs_Batch_1/Component_1583.png\"                          )) targets$tr[which(targets$ID == 1577)] <- 8.82 * 60 targets$tr[which(targets$ID == 1583)] <- 4 * 60"},{"path":"https://pablovgd.github.io/TARDIS/articles/quick_start.html","id":"peak-detection","dir":"Articles","previous_headings":"","what":"Peak detection","title":"Quick start for targeted peak integration of LC-MS data using TARDIS","text":"Now can perform peak detection runs setting screening_mode =  FALSE.","code":"results <- tardisPeaks(lcmsData = ms_data,                         dbData = targets,                         mass_range = NULL,                         polarity = \"positive\",                         output_directory = \"vignette_data/output/\",                         batch_positions = list(c(1,14)),                         QC_pattern = \"QC\",                         int_std_id = c(\"1576\",\"1577\",\"1578\",\"1583\",\"331\"),                         screening_mode = FALSE) #> Performing retention time correction using 5 peak groups. #> Aligning sample number 3 against subset ... OK #> Aligning sample number 4 against subset ... OK #> Aligning sample number 5 against subset ... OK #> Aligning sample number 6 against subset ... OK #> Aligning sample number 9 against subset ... OK #> Aligning sample number 10 against subset ... OK #> Aligning sample number 11 against subset ... OK #> Aligning sample number 12 against subset ... OK"},{"path":"https://pablovgd.github.io/TARDIS/articles/quick_start.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Quick start for targeted peak integration of LC-MS data using TARDIS","text":"resulting EICs saved output folder can inspected:  results object list contains data.frame AUC target run tibble contains feature table average metrics target QC runs. results include tables metrics (Max. Int., SNR, peak_cor points peak) saved output folder.","code":"knitr::include_graphics(c(\"vignette_data/output/Diagnostic_QCs_Batch_1/Component_7.png\",                          \"vignette_data/output/Diagnostic_QCs_Batch_1/Component_9.png\",                          \"vignette_data/output/Diagnostic_QCs_Batch_1/Component_131.png\",                          \"vignette_data/output/Diagnostic_QCs_Batch_1/Component_179.png\",                          \"vignette_data/output/Diagnostic_QCs_Batch_1/Component_183.png\",                          \"vignette_data/output/Diagnostic_QCs_Batch_1/Component_331.png\",                          \"vignette_data/output/Diagnostic_QCs_Batch_1/Component_1576.png\",                          \"vignette_data/output/Diagnostic_QCs_Batch_1/Component_1577.png\",                          \"vignette_data/output/Diagnostic_QCs_Batch_1/Component_1578.png\",                          \"vignette_data/output/Diagnostic_QCs_Batch_1/Component_1583.png\"                          )) kableExtra::kable(head(results[[1]])) kableExtra::kable(head(results[[2]])) maxint <- read.csv(\"vignette_data/output/int_table.csv\",check.names = FALSE) SNR <- read.csv(\"vignette_data/output/snr_table.csv\",check.names = FALSE) peak_cor <- read.csv(\"vignette_data/output/peakcor_table.csv\",check.names = FALSE) pop <- read.csv(\"vignette_data/output/pop_table.csv\",check.names = FALSE) kableExtra::kable(head(pop))"},{"path":"https://pablovgd.github.io/TARDIS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pablo Vangeenderhuysen. Author, maintainer.","code":""},{"path":"https://pablovgd.github.io/TARDIS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vangeenderhuysen P, Vynck M, Pomian B, De Windt K, Callemeyn E, De Paepe E, De Commer L, Raes J, Nawrot T, Rainer J, Hemeryck LY, Vanhaecke L (2025). \"Automated Integration Quality Assessment Chromatographic Peaks LC???MS-Based Metabolomics Lipidomics Using TARDIS.\" Analytical Chemistry, 97(18), 9927???9934. doi:10.1021/acs.analchem.5c00567.","code":"@Article{,   title = {Automated Integration and Quality Assessment of Chromatographic Peaks in LC???MS-Based Metabolomics and Lipidomics Using TARDIS},   author = {Pablo Vangeenderhuysen and Matthijs Vynck and Beata Pomian and Kimberly {De Windt} and Emile Callemeyn and Ellen {De Paepe} and Lindsey {De Commer} and Jeroen Raes and Tim Nawrot and Johannes Rainer and Lieselot Y. Hemeryck and Lynn Vanhaecke},   journal = {Analytical Chemistry},   year = {2025},   volume = {97},   number = {18},   pages = {9927???9934},   doi = {10.1021/acs.analchem.5c00567},   url = {https://doi.org/10.1021/acs.analchem.5c00567},   note = {PMID: 40296498}, }"},{"path":"https://pablovgd.github.io/TARDIS/index.html","id":"tardis-","dir":"","previous_headings":"","what":"TArgeted Raw Data Integration In Spectrometry","title":"TArgeted Raw Data Integration In Spectrometry","text":"R package TArgeted Raw Data Integration Spectrometry","code":""},{"path":"https://pablovgd.github.io/TARDIS/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"TArgeted Raw Data Integration In Spectrometry","text":"Make sure R (version >= 4.4.0) installed computer: https://cloud.r-project.org/index.html Windows users, Rtools installed well: https://cran.r-project.org/bin/windows/Rtools/rtools44/rtools.html Mac users, please install Xcode GNU Fortran compiler, see: https://mac.r-project.org/tools/index.html Xcode, can run line Mac OS terminal: latest version TARDIS, BiocManager version 3.20 required: https://www.bioconductor.org/install/ R, run: Since package contains example data, connection timeout often issue. can increase timeout setting R using: number indicates timeout setting seconds.","code":"sudo xcode-select --install if (!require(\"devtools\", quietly = TRUE))     install.packages(\"devtools\")  if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"pablovgd/TARDIS\",build_vignettes = FALSE,   dependencies=TRUE) options(timeout = \"300\")"},{"path":"https://pablovgd.github.io/TARDIS/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"TArgeted Raw Data Integration In Spectrometry","text":"Load package: Read vignettes tutorial use TARDIS Available online: https://pablovgd.github.io/TARDIS/ , installed build_vignettes = TRUE launch GUI R:","code":"library(TARDIS) RShowDoc(\"quick_start\",package = \"TARDIS\") RShowDoc(\"gui_tutorial\",package = \"TARDIS\") RShowDoc(\"case_study\",package = \"TARDIS\") runTardis()"},{"path":"https://pablovgd.github.io/TARDIS/index.html","id":"copyright","dir":"","previous_headings":"","what":"Copyright","title":"TArgeted Raw Data Integration In Spectrometry","text":"TARDIS licensed GPLv3 summary, GPLv3 license requires attribution, inclusion copyright license information, disclosure source code changes. Derivative work must available terms. Pablo Vangeenderhuysen (2024)","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/checkScans.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if any samples are missing spectra — checkScans","title":"Check if any samples are missing spectra — checkScans","text":"Display warning . Currently warns user sample detected less 50% mean spectra samples.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/checkScans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if any samples are missing spectra — checkScans","text":"","code":"checkScans(spectra)"},{"path":"https://pablovgd.github.io/TARDIS/reference/checkScans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if any samples are missing spectra — checkScans","text":"spectra Spectra object","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/checkScans.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if any samples are missing spectra — checkScans","text":"Pablo Vangeenderhuysen","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/createRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Create m/z and retention time ranges for target compounds — createRanges","title":"Create m/z and retention time ranges for target compounds — createRanges","text":"Creates ranges around given m/z retention time based given data allowed deviance.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/createRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create m/z and retention time ranges for target compounds — createRanges","text":"","code":"createRanges(msData, dbData, ppm, rtdev)"},{"path":"https://pablovgd.github.io/TARDIS/reference/createRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create m/z and retention time ranges for target compounds — createRanges","text":"msData MsExperiment() object dbData target database, output createTargetList() ppm allowed deviance ppm around given m/z value rtdev allowed deviance seconds retention time. Defines search window time dimension.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/createRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create m/z and retention time ranges for target compounds — createRanges","text":"list containing m/z retention time ranges given target compounds","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/createRanges.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create m/z and retention time ranges for target compounds — createRanges","text":"Pablo Vangeenderhuysen","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/createTargetList.html","id":null,"dir":"Reference","previous_headings":"","what":"Create target list — createTargetList","title":"Create target list — createTargetList","text":"Loads .xlsx .csv file contains information needed detect targeted compounds.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/createTargetList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create target list — createTargetList","text":"","code":"createTargetList(   input_directory_targets,   pos_pattern,   neg_pattern,   polarity,   ion_column,   columns_of_interest )"},{"path":"https://pablovgd.github.io/TARDIS/reference/createTargetList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create target list — createTargetList","text":"input_directory_targets Full path file containing database targeted compounds. pos_pattern Pattern positive ions recognized  ion_column neg_pattern Pattern negative ions recognized  ion_column polarity Indicates polarity, can either \"negative\" \"positive\" ion_column Name column type ionisation found columns_of_interest Column names columns information need included, can many needed, needs include \"ID\", \"Name\",\"m/z-value\" \"RT (min)\"","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/createTargetList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create target list — createTargetList","text":"dataframe containing targeted compounds","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/createTargetList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create target list — createTargetList","text":"Pablo Vangeenderhuysen","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/extract_eic.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to extract EIC from Spectra object — extract_eic","title":"Function to extract EIC from Spectra object — extract_eic","text":"Function extract EIC Spectra object","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/extract_eic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to extract EIC from Spectra object — extract_eic","text":"","code":"extract_eic(spectra)"},{"path":"https://pablovgd.github.io/TARDIS/reference/extract_eic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to extract EIC from Spectra object — extract_eic","text":"spectra Spectra object.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/extract_eic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to extract EIC from Spectra object — extract_eic","text":"two column matrix rt int","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/extract_eic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to extract EIC from Spectra object — extract_eic","text":"Pablo Vangeenderhuysen","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/filterSingle.html","id":null,"dir":"Reference","previous_headings":"","what":"filter Spectra to single peak in single sample — filterSingle","title":"filter Spectra to single peak in single sample — filterSingle","text":"filter Spectra single peak single sample","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/filterSingle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter Spectra to single peak in single sample — filterSingle","text":"","code":"filterSingle(spectra, dataOrigin, rt_range, mz_range)"},{"path":"https://pablovgd.github.io/TARDIS/reference/filterSingle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter Spectra to single peak in single sample — filterSingle","text":"spectra Spectra object dataOrigin file contains spectra rt_range numeric(2) rt range compound mz_range numeric(2) mz range compound","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/filterSingle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter Spectra to single peak in single sample — filterSingle","text":"returns filtered Spectra object","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/find_peak_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple peak detection algorithm on chromatographic data — find_peak_points","title":"Simple peak detection algorithm on chromatographic data — find_peak_points","text":"Basic peak picking algorithm finds targeted chromatographic peak given based retention time intensities expected retention time target signal. chromatographic signal expected contain signal single ion. See details information algorithm.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/find_peak_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple peak detection algorithm on chromatographic data — find_peak_points","text":"","code":"find_peak_points(   rtime = numeric(),   intensity = numeric(),   targetRtime = numeric(),   .check = TRUE )"},{"path":"https://pablovgd.github.io/TARDIS/reference/find_peak_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple peak detection algorithm on chromatographic data — find_peak_points","text":"rtime numeric retention times. intensity numeric (length rtime) signal intensities. targetRtime numeric(1) expected retention time target peak. .check logical(1) whether input parameters checked. Use .check = FALSE validity input parameters checked upstream function.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/find_peak_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple peak detection algorithm on chromatographic data — find_peak_points","text":"method: identifies first loacal maxima intensity, removes local maxima intensity lower 50% maximum intensity intensity finally reports defined tentative peak apex retenton time closest provided targetRtime. closest local minima least 2 data points apex position reported left right margin peak.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/find_peak_points.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simple peak detection algorithm on chromatographic data — find_peak_points","text":"Pablo Vangeenderhuysen","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/find_peak_points_orig.html","id":null,"dir":"Reference","previous_headings":"","what":"Find peak points — find_peak_points_orig","title":"Find peak points — find_peak_points_orig","text":"Basic peak picking algorithm finds targeted chromatographic peak given data expected retention time target.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/find_peak_points_orig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find peak points — find_peak_points_orig","text":"","code":"find_peak_points_orig(rtvector, vector, searchrt)"},{"path":"https://pablovgd.github.io/TARDIS/reference/find_peak_points_orig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find peak points — find_peak_points_orig","text":"rtvector Vector retention times. vector Vector intensities. searchrt Expected retention time peak.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/integrateSinglePeak.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate single chromatographic peak in single file — integrateSinglePeak","title":"Integrate single chromatographic peak in single file — integrateSinglePeak","text":"Integrate single chromatographic peak single file","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/integrateSinglePeak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate single chromatographic peak in single file — integrateSinglePeak","text":"","code":"integrateSinglePeak(file_path, rt, mz, ppm, rtdev, smoothing)"},{"path":"https://pablovgd.github.io/TARDIS/reference/integrateSinglePeak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate single chromatographic peak in single file — integrateSinglePeak","text":"file_path character(1) path .mzML .mzXML file rt numeric(1) search retention time target minutes mz numeric(1) search m/z target compound ppm numeric(1) allowed ppm deviance rtdev numeric(1) RT window seconds smoothing logical(1) TRUE FALSE","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/integrateSinglePeak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate single chromatographic peak in single file — integrateSinglePeak","text":"results peak integration","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/plotDiagnostic.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic plots — plotDiagnostic","title":"Diagnostic plots — plotDiagnostic","text":"Function make plots QC samples screen peak quality retention time shifts.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/plotDiagnostic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic plots — plotDiagnostic","text":"","code":"plotDiagnostic(   compound_info,   output_directory,   rt_list,   int_list,   x_list,   y_list,   batchnr,   sample_names )"},{"path":"https://pablovgd.github.io/TARDIS/reference/plotDiagnostic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostic plots — plotDiagnostic","text":"compound_info info target compounds like name, id, ... output_directory character(1) directory save plots. rt_list list list retention times complete window. int_list list list intensities complete window. x_list list list retention times integrated peak. y_list list list intensities integrated peak. batchnr numeric(1) batch number. sample_names names samples.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/plotDiagnostic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Diagnostic plots — plotDiagnostic","text":"Pablo Vangeenderhuysen","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/plotQCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to make plots of QC samples — plotQCs","title":"Function to make plots of QC samples — plotQCs","text":"Function make plots QC samples","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/plotQCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to make plots of QC samples — plotQCs","text":"","code":"plotQCs(   compound_info,   output_directory,   rt_list,   int_list,   x_list,   y_list,   batchnr,   sample_names )"},{"path":"https://pablovgd.github.io/TARDIS/reference/plotQCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to make plots of QC samples — plotQCs","text":"compound_info info target compounds like name, id, ... output_directory character(1) directory save plots. rt_list list list retention times complete window. int_list list list intensities complete window. x_list list list retention times integrated peak. y_list list list intensities integrated peak. batchnr numeric(1) batch number. sample_names names samples.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/plotQCs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to make plots of QC samples — plotQCs","text":"Pablo Vangeenderhuysen","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/plotSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to make plots of samples — plotSamples","title":"Function to make plots of samples — plotSamples","text":"Function make plots samples","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/plotSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to make plots of samples — plotSamples","text":"","code":"plotSamples(   compound_info,   output_directory,   rt_list,   int_list,   x_list,   y_list,   batchnr,   sample_names )"},{"path":"https://pablovgd.github.io/TARDIS/reference/plotSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to make plots of samples — plotSamples","text":"compound_info info target compounds like name, id, ... output_directory character(1) directory save plots. rt_list list list retention times complete window. int_list list list intensities complete window. x_list list list retention times integrated peak. y_list list list intensities integrated peak. batchnr numeric(1) batch number. sample_names names samples.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/plotSamples.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to make plots of samples — plotSamples","text":"Pablo Vangeenderhuysen","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/qscoreCalculator.html","id":null,"dir":"Reference","previous_headings":"","what":"qcoreCalculator — qscoreCalculator","title":"qcoreCalculator — qscoreCalculator","text":"Implementation work William Kumler calculate quality metrics: https://github.com/wkumler/MS_metrics","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/qscoreCalculator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"qcoreCalculator — qscoreCalculator","text":"","code":"qscoreCalculator(rt, int)"},{"path":"https://pablovgd.github.io/TARDIS/reference/qscoreCalculator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"qcoreCalculator — qscoreCalculator","text":"rt numeric vector retention times int numeric vector corresponding intensities","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/qscoreCalculator.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"qcoreCalculator — qscoreCalculator","text":"William Kumler","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/renameRawFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Thermo .raw files Script to read XCalibur sequence list and rename files according to run type (sample, QC, blank, etc...) — renameRawFiles","title":"Rename Thermo .raw files Script to read XCalibur sequence list and rename files according to run type (sample, QC, blank, etc...) — renameRawFiles","text":"Rename Thermo .raw files Script read XCalibur sequence list rename files according run type (sample, QC, blank, etc...)","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/renameRawFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Thermo .raw files Script to read XCalibur sequence list and rename files according to run type (sample, QC, blank, etc...) — renameRawFiles","text":"","code":"renameRawFiles(data_path_raw_files, data_path_list)"},{"path":"https://pablovgd.github.io/TARDIS/reference/renameRawFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Thermo .raw files Script to read XCalibur sequence list and rename files according to run type (sample, QC, blank, etc...) — renameRawFiles","text":"data_path_raw_files path raw files. Important: runs sequence list need corresponding .raw file input folder. data_path_list Path exported sequence list .csv format, columns may exported","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/renameRawFiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename Thermo .raw files Script to read XCalibur sequence list and rename files according to run type (sample, QC, blank, etc...) — renameRawFiles","text":"Pablo Vangeenderhuysen","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/runTardis.html","id":null,"dir":"Reference","previous_headings":"","what":"Run T.A.R.D.I.S. — runTardis","title":"Run T.A.R.D.I.S. — runTardis","text":"Launches GUI T..R.D..S. allows input parameters intuitive way perform targeted peak detection.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/runTardis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run T.A.R.D.I.S. — runTardis","text":"","code":"runTardis()"},{"path":"https://pablovgd.github.io/TARDIS/reference/tardisPeaks.html","id":null,"dir":"Reference","previous_headings":"","what":"TARDIS Peak Detection — tardisPeaks","title":"TARDIS Peak Detection — tardisPeaks","text":"Main function TARDIS package called Shiny app. Given data files list targeted compounds returns area peaks, optional diagnostic plots several parameters. See vignette detailed tutorial.","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/tardisPeaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TARDIS Peak Detection — tardisPeaks","text":"","code":"tardisPeaks(   file_path = NULL,   lcmsData = NULL,   dbData,   ppm = 5,   rtdev = 18,   mass_range = NULL,   polarity = \"positive\",   output_directory,   plots_samples = FALSE,   plots_QC = FALSE,   diagnostic_plots = TRUE,   batch_positions,   QC_pattern = \"QC\",   sample_pattern = \"\",   rt_alignment = TRUE,   int_std_id,   screening_mode = FALSE,   smoothing = TRUE,   max_int_filter = NULL )"},{"path":"https://pablovgd.github.io/TARDIS/reference/tardisPeaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TARDIS Peak Detection — tardisPeaks","text":"file_path character(1) Path .mzML .mzXML files containing LC-MS data. lcmsData MsExperiment MsExperiment containing data preprocessed. Sampledata least include run type match later provided \"QC\" \"sample\" pattern. dbData Output createTargetList() ppm numeric(1) Allowed deviance given m/z targets ppm. rtdev numeric(1) Allowed deviance given retention time compound, defines search window peak picking algorithm. mass_range numeric(2) user uses data overlapping mass windows, one mass window time can analyzed, specify . polarity character(1) Ionisation mode considered, can either \"positive\" \"negative\" output_directory character(1) Provide directory store output plots_samples logical(1) Create plots samples plots_QC logical(1) Create plots QCs diagnostic_plots logical(1) Create diagnostic plots 5 QCs spread across runs batch_positions list Indicate start end file batch, e.g. list(c(1,20),c(21,40)) QC_pattern character(1)  Pattern QC files sample_pattern character(1) Pattern sample files rt_alignment logical(1) Align retention time based internal standard compounds QC samples. int_std_id character Provide ID's internal standard compounds retention time alignment screening_mode logical(1) Run algorithm 5 QCs quickly check retention time shifts smoothing logical(1) Smooth peaks sgolayfilt() max_int_filter numeric(1) Disregard peaks max. int. lower value","code":""},{"path":"https://pablovgd.github.io/TARDIS/reference/tardisPeaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TARDIS Peak Detection — tardisPeaks","text":"returns list auc table feature table summarized stats per compound. Outputs plots tables output folder.","code":""},{"path":[]},{"path":"https://pablovgd.github.io/TARDIS/news/index.html","id":"changes-in-1-0","dir":"Changelog","previous_headings":"","what":"Changes in 1.1.0","title":"TARDIS 1.0","text":"Implement polarity filter","code":""},{"path":"https://pablovgd.github.io/TARDIS/news/index.html","id":"changes-in-1-0-1","dir":"Changelog","previous_headings":"","what":"Changes in 1.0.1","title":"TARDIS 1.0","text":"Quick fix integrateSinglePeak","code":""},{"path":"https://pablovgd.github.io/TARDIS/news/index.html","id":"changes-in-1-0-2","dir":"Changelog","previous_headings":"","what":"Changes in 1.0.0","title":"TARDIS 1.0","text":"Fix issue #32 Implement output input parameters, see issue #33 Update documentation Small changes GUI","code":""},{"path":[]},{"path":"https://pablovgd.github.io/TARDIS/news/index.html","id":"changes-in-0-1","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.7","title":"TARDIS 0.1","text":"Fix issue #28","code":""},{"path":"https://pablovgd.github.io/TARDIS/news/index.html","id":"changes-in-0-1-1","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.6","title":"TARDIS 0.1","text":"Add case study vignette","code":""},{"path":"https://pablovgd.github.io/TARDIS/news/index.html","id":"changes-in-0-1-2","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.5","title":"TARDIS 0.1","text":"Fix regarding issue #24","code":""},{"path":"https://pablovgd.github.io/TARDIS/news/index.html","id":"changes-in-0-1-3","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.4","title":"TARDIS 0.1","text":"Hotfix custom mass range.","code":""},{"path":"https://pablovgd.github.io/TARDIS/news/index.html","id":"changes-in-0-1-4","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.3","title":"TARDIS 0.1","text":"Added functionality tardisPeaks allow MsExperiment object input.","code":""},{"path":"https://pablovgd.github.io/TARDIS/news/index.html","id":"changes-in-0-1-5","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.2","title":"TARDIS 0.1","text":"Various small fixes typo corrections. Added quick start vignette. Fixed bug intensities zero /constant.","code":""},{"path":"https://pablovgd.github.io/TARDIS/news/index.html","id":"changes-in-0-1-6","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.1","title":"TARDIS 0.1","text":"Refactor find_peak_points() add unit tests documentation. General improvement code readability documentation. Get correct rt ISTD RT alignment New function checkScans() check faulty input files miss scans. Setting intensity filter zero disables filter retain NA.","code":""}]
